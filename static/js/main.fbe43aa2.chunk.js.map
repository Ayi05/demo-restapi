{"version":3,"sources":["home/1_header/topbar.js","home/2_main/sections/users.js","home/2_main/sections/products.js","home/2_main/sections/conversion.js","home/2_main/display.js","Home.js","serviceWorker.js","index.js"],"names":["Topbar","props","useState","isOpen","setIsOpen","Navbar","className","color","dark","expand","NavbarBrand","href","src","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","Form","Input","size","type","name","id","placeholder","Button","class","Users","users","setUsers","useEffect","fetch","then","res","json","data","map","user","company","email","address","city","booksList","title","subtitle","author","price","book","isbn","Products","listStyleType","currencies","value","label","useStyles","makeStyles","theme","root","margin","spacing","Conversion","classes","React","currencyIn","setCurrencyIn","currencyOut","setCurrencyOut","amountIn","setAmountIn","amountOut","setAmountOut","autoComplete","onSubmit","event","amount","toFixed","replace","select","onChange","target","helperText","variant","option","MenuItem","key","validators","errorMessages","InputProps","readOnly","TabPanel","children","index","other","Typography","component","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","preventDefault","flexGrow","backgroundColor","palette","background","paper","Display","setValue","AppBar","position","Tabs","newValue","aria-label","Home","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbe43aa2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, Button, Form, Input } from 'reactstrap';\r\n\r\nconst Topbar = (props) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar className=\"mb-5\" color=\"dark\" dark expand=\"md\">\r\n\r\n      <div className=\"container\">\r\n\r\n        <NavbarBrand href=\"/\">\r\n          <img src=\"./icon.png\" alt=\"logo\" style={{ width: \"30px\" }} />\r\n          <h3 className=\"d-inline ml-2\">\r\n            <small className=\"font-weight-bold\">\r\n              Demo-RestApi\r\n            </small>\r\n          </h3>\r\n        </NavbarBrand>\r\n\r\n        <NavbarToggler onClick={toggle} />\r\n\r\n        <Collapse isOpen={isOpen} navbar>\r\n\r\n          <Nav className=\"mr-auto\" navbar></Nav>\r\n\r\n          <Form className=\"form-inline\">\r\n            <div className=\"input-group mt-3 mt-md-0\">\r\n\r\n              <Input\r\n                size=\"sm\"\r\n                type=\"search\"\r\n                name=\"search\"\r\n                id=\"exampleSearch\"\r\n                placeholder=\"Chercher\"\r\n              />\r\n\r\n              <div className=\"input-group-append\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-secondary\">\r\n                  <i class=\"fa fa-search\"></i>\r\n                </Button>\r\n              </div>\r\n\r\n            </div>\r\n          </Form>\r\n\r\n          <Button className=\"mt-3 mt-md-0 ml-md-3\" color=\"success\" size=\"sm\">Connexion</Button>{' '}\r\n\r\n        </Collapse>\r\n\r\n      </div>\r\n\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst Users = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users/')\r\n            .then(res => res.json())\r\n            .then(data => setUsers(data))\r\n    });\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* Visible only on xs and sm screen  */}\r\n            <div className=\"border d-md-none\">\r\n                <table className=\"table table-md table-hover\">\r\n                    <thead className=\"bg-light\">\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Company</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr className=\"\">\r\n                                <td><small>{user.name}</small></td>\r\n                                <td><small>{user.company.name}</small></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Visible only on md screen and above */}\r\n            <div className=\"border d-none d-md-block\">\r\n                <table className=\"table table-md table-hover\">\r\n                    <thead className=\"bg-light\">\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>E-Mail</th>\r\n                            <th>City</th>\r\n                            <th>Company</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr className=\"\">\r\n                                <td><small>{user.name}</small></td>\r\n                                <td><small>{user.email}</small></td>\r\n                                <td><small>{user.address.city}</small></td>\r\n                                <td><small>{user.company.name}</small></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default Users;","import React from 'react';\r\n// import { Card, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\n\r\nexport const books = [\r\n    { title: 'WordPress 5', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'React.Js', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'Node.Js', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'MySql', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'JavaScript', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'Bootstrap', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'Html5', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    { title: 'Css3', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n    // { title: 'Express.Js', subtitle: 'Un CMS pour créer et gérer blogs et sites web', author: 'Christophe AUBRY', price: '39.92' },\r\n];\r\n\r\n\r\n\r\nconst booksList = books.map((book) =>\r\n    <li className=\"col-10 col-sm-6 col-md-4 col-lg-3\">\r\n        <div className=\"card border-success mb-3\">\r\n            <div className=\"card-header\">\r\n                <span className=\"\">${book.price}</span>\r\n\r\n                <a href=\"/\" className=\"float-right\">\r\n                    <i className=\"fa fa-shopping-cart float-right\"></i>\r\n                </a>\r\n                <a href=\"/\" className=\"float-right mr-3\">\r\n                    <i className=\"fa fa-heart float-left\"></i>\r\n                </a>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"text-primary mb-2\">\r\n                    <h5 className=\"card-title\">{book.title}</h5>\r\n                    <p className=\"card-text\">{book.subtitle}</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"\">\r\n                    <span className=\"card-text\"><small>Auteur: {book.author}</small></span><br />\r\n                    <span className=\"card-text\"><small>isbn: {book.isbn}</small></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </li>\r\n)\r\n\r\nconst Products = (props) => {\r\n    return (\r\n        <ul className=\"row\" style={{ listStyleType: \"none\" }}>\r\n\r\n            {booksList}\r\n\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Button } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\r\n\r\nconst currencies = [\r\n    {\r\n        value: '1.087',\r\n        label: 'USD',\r\n    },\r\n    {\r\n        value: '1',\r\n        label: 'EUR',\r\n    },\r\n    {\r\n        value: '1.442',\r\n        label: 'CAD',\r\n    },\r\n    {\r\n        value: '655.957',\r\n        label: 'CFA',\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(0),\r\n            width: 160,\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function Conversion() {\r\n    const classes = useStyles();\r\n    const [currencyIn, setCurrencyIn] = React.useState(\"1\");\r\n    const [currencyOut, setCurrencyOut] = React.useState(\"1\");\r\n    const [amountIn, setAmountIn] = React.useState();\r\n    const [amountOut, setAmountOut] = React.useState();\r\n\r\n\r\n    const handleCurrencyIn = event => {\r\n        setCurrencyIn(event.target.value);\r\n        setAmountOut('');\r\n    };\r\n\r\n    const handleCurrencyOut = event => {\r\n        setCurrencyOut(event.target.value);\r\n        setAmountOut('');\r\n    };\r\n\r\n    const handleAmountIn = event => {\r\n        setAmountIn(event.target.value);\r\n        setAmountOut('');\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        if (amountIn >= 0) {\r\n            let amount = (amountIn * (currencyOut / currencyIn));\r\n            amount = amount.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\r\n            setAmountOut(amount);\r\n        }\r\n        // else setAmountOut('Montant Invalide')\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <ValidatorForm className={classes.root} autoComplete=\"on\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-inline my-4\">\r\n                    <div className=\"input-group-append\">\r\n                        <SelectValidator\r\n                            select\r\n                            size=\"small\"\r\n                            label=\"De\"\r\n                            value={currencyIn}\r\n                            onChange={handleCurrencyIn}\r\n                            helperText=\"\"\r\n                            variant=\"outlined\">\r\n\r\n                            {currencies.map(option => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n\r\n                        </SelectValidator>\r\n\r\n                        <TextValidator\r\n                            size=\"small\"\r\n                            type=\"number\"\r\n                            label=\"Montant\"\r\n                            value={amountIn}\r\n                            onChange={handleAmountIn}\r\n                            variant=\"outlined\"\r\n                            validators={['required', 'minNumber:0', 'maxNumber:9999999999999999']} errorMessages={['Champ Obligatoire!']}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row my-4\">\r\n\r\n\r\n                    <SelectValidator\r\n                        select\r\n                        size=\"small\"\r\n                        label=\"À\"\r\n                        value={currencyOut}\r\n                        onChange={handleCurrencyOut}\r\n                        helperText=\"\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        {currencies.map(option => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </SelectValidator>\r\n\r\n                    <TextValidator\r\n                        size=\"small\"\r\n                        value={amountOut}\r\n                        variant=\"outlined\"\r\n                        helperText=\"\"\r\n                        InputProps={{ readOnly: true, }}\r\n                    />\r\n\r\n\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\"><i className=\"fa fa-angle-double-right\"></i></Button>\r\n                </div>\r\n            </ValidatorForm>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Users from './sections/users'\r\nimport Products from './sections/products'\r\nimport Conversion from './sections/conversion'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`nav-tabpanel-${index}`}\r\n            aria-labelledby={`nav-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `nav-tab-${index}`,\r\n        'aria-controls': `nav-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n    return (\r\n        <Tab\r\n            component=\"a\"\r\n            onClick={event => {\r\n                event.preventDefault();\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function Display() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    variant=\"fullWidth\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    aria-label=\"nav tabs example\"\r\n                >\r\n                    <LinkTab label=\"Conversion\" {...a11yProps(0)} />\r\n                    <LinkTab label=\"Products\" {...a11yProps(1)} />\r\n                    <LinkTab label=\"Users\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <TabPanel value={value} index={0}>\r\n                <Conversion></Conversion>\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                <Products></Products>\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={2}>\r\n                <Users></Users>\r\n            </TabPanel>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport Topbar from './home/1_header/topbar';\nimport Display from './home/2_main/display';\n\nconst Home = (props) => {\n  return (\n    <div style={{ fontFamily: \"Cambria\" }}>\n      <Topbar></Topbar>\n      <div className=\"container\">\n        <Display></Display>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Home from \"./Home\";\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}